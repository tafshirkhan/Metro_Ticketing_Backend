// <auto-generated />
using System;
using Metro.Ticketing.DAL.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Metro.Ticketing.DAL.Migrations
{
    [DbContext(typeof(MetroTicketingDbContext))]
    [Migration("20230309165615_InitializeDb")]
    partial class InitializeDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MetroTicketing.System.Entities.BankCredential", b =>
                {
                    b.Property<Guid>("BankCredId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid?>("UserId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("BankCredId");

                    b.HasIndex("UserId");

                    b.ToTable("bankCred");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Booking", b =>
                {
                    b.Property<Guid>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid?>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SeatNum")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TrainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("BookingId");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Passenger", b =>
                {
                    b.Property<Guid>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassengerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PassengerId");

                    b.ToTable("passenger");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Seat", b =>
                {
                    b.Property<Guid>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<Guid>("TrainId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SeatId");

                    b.HasIndex("TrainId");

                    b.ToTable("seat");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Ticket", b =>
                {
                    b.Property<Guid>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TicketId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Train", b =>
                {
                    b.Property<Guid>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ArrivalStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArrivalTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("TrainId");

                    b.ToTable("trains");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Transaction", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Fare")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("TransactionId");

                    b.HasIndex("BookingId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.BankCredential", b =>
                {
                    b.HasOne("MetroTicketing.System.Entities.User", null)
                        .WithMany("bankCreds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Seat", b =>
                {
                    b.HasOne("MetroTicketing.System.Entities.Train", null)
                        .WithMany("seats")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Ticket", b =>
                {
                    b.HasOne("MetroTicketing.System.Entities.Transaction", null)
                        .WithMany("tickets")
                        .HasForeignKey("TransactionId");

                    b.HasOne("MetroTicketing.System.Entities.User", null)
                        .WithMany("tickets")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Transaction", b =>
                {
                    b.HasOne("MetroTicketing.System.Entities.Booking", null)
                        .WithMany("transactions")
                        .HasForeignKey("BookingId");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Booking", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Train", b =>
                {
                    b.Navigation("seats");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.Transaction", b =>
                {
                    b.Navigation("tickets");
                });

            modelBuilder.Entity("MetroTicketing.System.Entities.User", b =>
                {
                    b.Navigation("bankCreds");

                    b.Navigation("tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
